# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron:  '0 0 * * 6'   

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
        with:
          repository: canonical/k8s-dqlite
          submodules: true
          fetch-depth: 0    
    
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.16.10"
    
      - name: Install build dependencies
        run: |
          sudo apt-get install -y build-essential autoconf automake libtool cmake lcov

      - name: Install libuv
        run: |
          git clone https://github.com/libuv/libuv
          cd libuv
          sh autogen.sh          
          ./configure
          make
          make check
          sudo make install
          
      - name: Install raft
        run: |
          sudo apt-get install -y liblz4-dev
          git clone https://github.com/canonical/raft.git
          cd raft
          autoreconf -i
          ./configure
          make
          sudo make install

      - name: Install sqlite3
        run: |
          sudo apt-get install -y libsqlite3-dev

      - name: Install dqlite
        run: |
          git clone https://github.com/canonical/dqlite
          cd dqlite
          autoreconf -i
          ./configure
          make
          sudo make install
          
      - name: dqlite cli
        run: |
          git clone https://github.com/canonical/go-dqlite
          cd go-dqlite
          export CGO_LDFLAGS_ALLOW="-Wl,-z,now"
          go build -o dqlite cmd/dqlite/dqlite.go
          ls -la
          ls -la cmd/dqlite/
          pwd

      - name: Build
        run: |
          export CGO_LDFLAGS_ALLOW="-Wl,-z,now"
          go build -o k8s-dqlite -tags libsqlite3,dqlite k8s-dqlite.go
          #go build -o k8s-dqlite -ldflags="-s -extldflags=-static" -tags netgo,osusergo,libsqlite3,dqlite,sqlite_omit_load_extension k8s-dqlite.go
        
      - uses: actions/upload-artifact@v2
        with:
          name: k8s-dqlite
          path: |
            ./k8s-dqlite
            /usr/local/lib/libdqlite.so.0
            /usr/local/lib/libraft.so.0
            /usr/local/lib/libuv.so.1
            /home/runner/work/k8s-dqlite/k8s-dqlite/go-dqlite/dqlite
          
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "k8s-dqlite,/usr/local/lib/libdqlite.so.0,/usr/local/lib/libraft.so.0,/usr/local/lib/libuv.so.1,/home/runner/work/k8s-dqlite/k8s-dqlite/go-dqlite/dqlite"
          tag: 'latest'
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}          

      - uses: gautamkrishnar/keepalive-workflow@master
